@using Sequence.Utilities.SCLEditor.Components.Examples
<MudGrid>

  @foreach (var group in ExampleTemplate.ExampleComponent.GetInputs(_choiceData).GroupBy(x => x.Group))
  {
    <MudItem xs='12' md='6' lg='4' @key='@(ExampleName + group.Key + "MudItem")'>
      <MudPaper Class="ma-2" Square="true">

        @foreach (var input in group)
        {
          var id = (input.Name);

          @if (input is ExampleInput.ExampleFileInput fileInput)
          {
            var options = GetOptions(fileInput);

            <MudText Typo="Typo.h6">@input.Name</MudText>

            <MonacoEditor
              Id="@id"
              CssClass='nested-monaco-editor'
              @key="@id"
              @ref="_choiceData.Editors[id]"
              OnDidChangeModelContent='UpdateOutput'
              ConstructionOptions="_ => options" />
          }
          else if (input is ExampleInput.ExampleStringVariableInput stringVariableInput)
          {
            <MudTextField T='string'
                          TextChanged='UpdateOutput'
                          Label='@stringVariableInput.Name'
                          @bind-Value='_choiceData.StringValues[id]' />
          }
          else if (input is ExampleInput.ExampleEnumVariableInput enumVariableInput)
          {
            <MudSelect T='ExampleInput.EnumValue'
                       Label='@enumVariableInput.Name'
                       SelectedValuesChanged='UpdateOutput'
                       @bind-Value='_choiceData.EnumValues[id]'>
              @foreach (var val in enumVariableInput.PossibleValues)
              {
                <MudSelectItem Value="@(val)">@val.Name</MudSelectItem>
              }
            </MudSelect>
          }
          else if (input is ExampleInput.ExampleIntVariableInput intVariableInput)
          {
            <MudNumericField T='int'
                             TextChanged='UpdateOutput'
                             Label='@intVariableInput.Name'
                             @bind-Value='_choiceData.IntValues[id]'
                             Min='@(intVariableInput.Minimum ?? 0)'
                             Max='@(intVariableInput.Maximum ?? int.MaxValue)'
                             Step='@(intVariableInput.Step ?? 1)' />
          }
          else if (input is ExampleInput.Mode choice)
          {
            <MudSelect T='ExampleComponent'
                       Label='@choice.Name'
                       SelectedValuesChanged="UpdateOutput"
                       @bind-Value='_choiceData.ChoiceValues[id]'>
              @foreach (var val in choice.Options)
              {
                <MudSelectItem Value="@(val)">@val.Name </MudSelectItem>
              }
            </MudSelect>
          }
        }

      </MudPaper>
    </MudItem>
  }


  <MudItem xs='12' md='6' lg='4'>
    <MudPaper Class="ma-2" Square="true">
      <MudText Typo="Typo.h6">Output</MudText>

      <MonacoEditor
        Id="@(ExampleName + "Output")"
        CssClass='nested-monaco-editor'
        @ref="_outputEditor"
        OnDidInit='UpdateOutput'
        ConstructionOptions="_ => OutputEditorConstructionOptions" />
    </MudPaper>

    <MudExpansionPanels>
      <MudExpansionPanel Text='SCL'>
        <MonacoEditor
          Id="scl-monaco"
          CssClass='nested-monaco-editor'
          @ref="_sclEditor"
          ConstructionOptions="_ => SCLEditorConstructionOptions" />
      </MudExpansionPanel>
    </MudExpansionPanels>


  </MudItem>

</MudGrid>

<style>
  .nested-monaco-editor {
    text-align: initial;
    height: 500px;
  }
</style>
